"""Add shelf_life_to_product_and_prod_date_to_transaction

Revision ID: 168dc19099b3
Revises: 3a7d69b8f0a2
Create Date: <วันที่สร้างไฟล์>

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
# --- เพิ่ม import นี้ ---
from sqlalchemy.dialects import postgresql
# ----------------------


# revision identifiers, used by Alembic.
revision: str = '168dc19099b3' # <-- ตรวจสอบให้แน่ใจว่าเป็น ID นี้
down_revision: Union[str, None] = '3a7d69b8f0a2' # <-- สำคัญมาก: ต้องชี้ไป ID ก่อนหน้าจริงๆ
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# --- สร้าง Enum object ที่นี่ เพื่อใช้ทั้ง upgrade และ downgrade ---
transaction_type_enum = postgresql.ENUM(
    'STOCK_IN', 'SALE', 'ADJUSTMENT_ADD', 'ADJUSTMENT_SUB',
    'TRANSFER_OUT', 'TRANSFER_IN', 'INITIAL',
    name='transactiontypeenum', create_type=False # ตั้ง create_type=False เพราะเราจะใช้ op.create_type() / op.drop_type()
)
# ----------------------------------------------------------------


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # --- **สำคัญ:** สร้าง Enum Type ก่อนคำสั่งอื่นเสมอ ---
    transaction_type_enum.create(op.get_bind(), checkfirst=True)
    # -------------------------------------------------

    # --- คำสั่งที่ Alembic สร้างให้ (ตรวจสอบว่าตรงกับของคุณหรือไม่) ---
    op.add_column('inventory_transactions', sa.Column('production_date', sa.Date(), nullable=True))
    op.add_column('products', sa.Column('shelf_life_days', sa.Integer(), nullable=True))

    # หมายเหตุ: ถ้ามี op.alter_column('inventory_transactions', 'transaction_type', ...)
    # ที่ autogenerate สร้างขึ้นมา ให้วางไว้ *หลัง* transaction_type_enum.create()
    # เช่น อาจจะมีโค้ดคล้ายๆ แบบนี้ ถ้ามีการเปลี่ยน Type ของคอลัมน์เดิม
    # op.alter_column('inventory_transactions', 'transaction_type',
    #            existing_type=sa.VARCHAR(length=XX), # Type เดิม
    #            type_=transaction_type_enum,
    #            existing_nullable=False,
    #            postgresql_using='transaction_type::transactiontypeenum')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # --- คำสั่งที่ Alembic สร้างให้ (ตรวจสอบว่าตรงกับของคุณหรือไม่) ---
    op.drop_column('products', 'shelf_life_days')
    op.drop_column('inventory_transactions', 'production_date')

    # หมายเหตุ: ถ้ามี op.alter_column ใน upgrade() ต้องมี alter_column กลับที่นี่
    # op.alter_column('inventory_transactions', 'transaction_type',
    #            existing_type=transaction_type_enum,
    #            type_=sa.VARCHAR(length=XX), # Type เดิม
    #            existing_nullable=False)

    # --- **สำคัญ:** ลบ Enum Type เป็นลำดับสุดท้าย ---
    transaction_type_enum.drop(op.get_bind(), checkfirst=True)
    # ----------------------------------------------

    # ### end Alembic commands ###